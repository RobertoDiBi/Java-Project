/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ipd12.movieticketing;

import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONException;

/**
 *
 * @author 1796174
 */
public class MovieListGUI extends javax.swing.JFrame {

    MovieListAPI api = new MovieListAPI();
	DefaultTableModel movieTableModel = new DefaultTableModel();

    /**
     * Creates new form MovieListGUI
     */
    public MovieListGUI() {
		try {
            initComponents();
            Globals.db = new Database();
            Globals.users = Globals.db.loadUsers();
            Globals.db.loadMovieList(api.getMoviesFromAPI());
			Globals.movieGUI = this;
			loadTable();
            meUser.setVisible(false);
			meAdminTools.setVisible(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Could not connect to database.\n" + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
            return;
        } catch (IOException ex) {
            Logger.getLogger(MovieListGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            JOptionPane.showMessageDialog(this, "Could not retrieve data from API database.\n" + ex.getMessage(), "JSON error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }
	
	public MovieListGUI (boolean initialize)
	{
		
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovieList = new javax.swing.JTable();
        lblUserStatus = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        meUser = new javax.swing.JMenu();
        miLogout = new javax.swing.JMenuItem();
        meExit = new javax.swing.JMenuItem();
        meRegister = new javax.swing.JMenu();
        meLogin = new javax.swing.JMenu();
        miUserLogin = new javax.swing.JMenuItem();
        miAdminLogin = new javax.swing.JMenuItem();
        meAdminTools = new javax.swing.JMenu();
        miShowtimes = new javax.swing.JMenuItem();
        miTicketPrices = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MovieListGUI");

        jLabel1.setFont(new java.awt.Font("Copperplate", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NOW PLAYING");

        tblMovieList.setFont(new java.awt.Font("Copperplate", 0, 12)); // NOI18N
        tblMovieList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMovieList.setToolTipText("");
        tblMovieList.setRowHeight(100);
        jScrollPane1.setViewportView(tblMovieList);

        lblUserStatus.setFont(new java.awt.Font("Copperplate", 0, 16)); // NOI18N
        lblUserStatus.setText("No user currently logged in");

        meUser.setText("User");

        miLogout.setText("Log out");
        miLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogoutActionPerformed(evt);
            }
        });
        meUser.add(miLogout);

        meExit.setText("Exit");
        meExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meExitActionPerformed(evt);
            }
        });
        meUser.add(meExit);

        jMenuBar1.add(meUser);

        meRegister.setText("Register");
        meRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meRegisterMouseClicked(evt);
            }
        });
        jMenuBar1.add(meRegister);

        meLogin.setText("Log in");
        meLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meLoginMouseClicked(evt);
            }
        });

        miUserLogin.setText("As user");
        miUserLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miUserLoginActionPerformed(evt);
            }
        });
        meLogin.add(miUserLogin);

        miAdminLogin.setText("As admin");
        miAdminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAdminLoginActionPerformed(evt);
            }
        });
        meLogin.add(miAdminLogin);

        jMenuBar1.add(meLogin);

        meAdminTools.setText("Admin tools");

        miShowtimes.setText("Update showtimes");
        miShowtimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miShowtimesActionPerformed(evt);
            }
        });
        meAdminTools.add(miShowtimes);

        miTicketPrices.setText("Update ticket prices");
        miTicketPrices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTicketPricesActionPerformed(evt);
            }
        });
        meAdminTools.add(miTicketPrices);

        jMenuBar1.add(meAdminTools);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUserStatus)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void meRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meRegisterMouseClicked
        DlgRegister dlgRegister = new DlgRegister(this, true);
        display(dlgRegister);
    }//GEN-LAST:event_meRegisterMouseClicked

    private void meLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meLoginMouseClicked
        
    }//GEN-LAST:event_meLoginMouseClicked

    private void miLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogoutActionPerformed
        Globals.currentUser = null;
		Globals.userLogged = false;
        lblUserStatus.setText("No user currently logged in.");
        meUser.setVisible(false);
		meAdminTools.setVisible(false);
        meRegister.setVisible(true);
        meLogin.setVisible(true);
    }//GEN-LAST:event_miLogoutActionPerformed

    private void meExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meExitActionPerformed
        JOptionPane.showMessageDialog(this,
                    "Thank you for using our Movie Ticketing System!",
                    "Purchase succesfully complete!",
                    JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);   
    }//GEN-LAST:event_meExitActionPerformed

    private void miUserLoginActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miUserLoginActionPerformed
    {//GEN-HEADEREND:event_miUserLoginActionPerformed
        DlgLogin dlgLogin = new DlgLogin(this, true);
        display(dlgLogin);
    }//GEN-LAST:event_miUserLoginActionPerformed

    private void miAdminLoginActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miAdminLoginActionPerformed
    {//GEN-HEADEREND:event_miAdminLoginActionPerformed
        DlgLoginAdmin dlgLoginAdmin = new DlgLoginAdmin(this, true);
        display(dlgLoginAdmin);
    }//GEN-LAST:event_miAdminLoginActionPerformed

    private void miShowtimesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miShowtimesActionPerformed
    {//GEN-HEADEREND:event_miShowtimesActionPerformed
        new AddShowtimeGUI().setVisible(true);
    }//GEN-LAST:event_miShowtimesActionPerformed

    private void miTicketPricesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_miTicketPricesActionPerformed
    {//GEN-HEADEREND:event_miTicketPricesActionPerformed
        display(new DlgUpdatePrices(this, true));
    }//GEN-LAST:event_miTicketPricesActionPerformed

    public void display(JDialog d) {
        d.pack();
        d.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
		
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieListGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblUserStatus;
    public javax.swing.JMenu meAdminTools;
    private javax.swing.JMenuItem meExit;
    public javax.swing.JMenu meLogin;
    public javax.swing.JMenu meRegister;
    public javax.swing.JMenu meUser;
    private javax.swing.JMenuItem miAdminLogin;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JMenuItem miShowtimes;
    private javax.swing.JMenuItem miTicketPrices;
    private javax.swing.JMenuItem miUserLogin;
    private javax.swing.JTable tblMovieList;
    // End of variables declaration//GEN-END:variables
	
	private void loadTable() throws MalformedURLException, IOException {
		ArrayList<Movie> moviesList;
		try {
			moviesList = Globals.db.getAllMovies();
		} catch (SQLException ex) {
			JOptionPane.showMessageDialog(this, "Could not retrieve movies from database.\n" + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
            return;
		}
		
		ArrayList<MovieWithPic> movies = new ArrayList<>();
		
		for (Movie m : moviesList)
		{
			movies.add(new MovieWithPic(m));
		}
		
		tblMovieList.setModel(new MovieTableModel(movies));
		tblMovieList.setDefaultRenderer(MovieWithPic.class, new MovieCellRenderer());
		tblMovieList.setDefaultEditor(MovieWithPic.class, new MovieCellEditor());
		tblMovieList.setRowHeight(350);
		tblMovieList.getTableHeader().setUI(null);
	}
}
